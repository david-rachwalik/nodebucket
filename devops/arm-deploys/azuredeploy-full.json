{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]",
      "minLength": 2,
      "metadata": {
        "description": "Application name."
      }
    },
    "linuxFxVersion": {
      "type": "string",
      "defaultValue": "NODE|lts",
      "metadata": {
        "description": "The Runtime stack of current web app"
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "defaultValue": "F1",
      "metadata": {
        "description": "The pricing tier for the hosting plan."
      }
    },
    "repoUrl": {
      "type": "string",
      "defaultValue": " ",
      "metadata": {
        "description": "Optional - URL for the GitHub repository that contains the project to deploy."
      }
    },
    "repoBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Optional - The branch of the GitHub repository to use."
      }
    }
  },
  "functions": [],
  "variables": {
    "location": "[resourceGroup().location]",
    // "webAppName": "[format('webapp-{0}', parameters('appName'))]",
    // "appServicePlanName": "[format('asp-{0}', parameters('appName'))]"
    "appServicePlanName": "[format('asp-{0}_{1}', parameters('sku'), resourceGroup().location)]"
  },
  "resources": [
    {
      // https://learn.microsoft.com/en-us/azure/templates/microsoft.web/serverfarms
      // https://github.com/Azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.web/app-service-docs-linux/azuredeploy.json
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      // https://learn.microsoft.com/en-us/azure/templates/microsoft.web/sites
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      // "name": "[variables('webAppName')]",
      "name": "[parameters('appName')]",
      "location": "[variables('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "[parameters('linuxFxVersion')]",
          "minTlsVersion": "1.2",
          "ftpsState": "FtpsOnly",
          // Enable production-specific behavior, such as caching or error handling
          // https://docs.npmjs.com/cli/v8/commands/npm-install#omit
          "appSettings": [
            {
              "name": "NODE_ENV",
              "value": "production"
            }
          ]
        }
      }
    },
    {
      // Only Standard tier and above support deployment slots for zero downtime swaps
      // https://learn.microsoft.com/en-us/azure/templates/microsoft.web/sites/sourcecontrols
      // "condition": "[contains(parameters('repoUrl'), 'http')]",
      "condition": "[and(
        contains(parameters('repoUrl'), 'http'),
        or(
          equals(parameters('sku'), 'S1'),
          equals(parameters('sku'), 'S2'),
          equals(parameters('sku'), 'S3')
        )
      )]",
      "type": "Microsoft.Web/sites/sourcecontrols",
      "apiVersion": "2022-03-01",
      // "name": "[format('{0}/{1}', variables('webAppName'), 'web')]",
      "name": "[format('{0}/{1}', parameters('appName'), 'web')]",
      "properties": {
        "repoUrl": "[parameters('repoUrl')]",
        "branch": "[parameters('repoBranch')]",
        // "kind": "github", // auto-detected by 'repoUrl', only used for override
        "isManualIntegration": false // let Azure App Service handle the slot swap
      },
      "dependsOn": [
        // "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
        "[resourceId('Microsoft.Web/sites', parameters('appName'))]"
      ]
    }
  ],
  "outputs": {
    "appServicePlanId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
    },
    "webAppName": {
      "type": "string",
      "value": "[concat('https://', reference(parameters('appName')).defaultHostName)]"
    },
    "connectionStrings": {
      "type": "array",
      "value": "[coalesce(reference(parameters('appName')).siteConfig.connectionStrings, json('[]'))]"
    }
  }
}
